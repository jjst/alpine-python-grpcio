name: Build docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 4 * * *'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install libxml-xpath-perl jq
      - id: find-grpcio-versions
        run: |
          versions=$(./find-grpcio-versions.sh)
          echo $versions
          echo "::set-output name=grpcio-versions::$versions"
      - id: find-published-image-tags
        run: |
          tags=$(./find-published-image-tags.sh)
          echo $tags
          echo "::set-output name=published-tags::$tags"
    outputs:
        grpcio-versions: ${{ steps.find-grpcio-versions.outputs.grpcio-versions }}
        published-tags: ${{ steps.find-published-image-tags.outputs.published-tags }}


  build-docker-image:
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        grpcio-version: ${{ fromJson(needs.setup.outputs.grpcio-versions) }}
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        alpine-version: ["3.12", "3.13"]
    runs-on: ubuntu-latest
    steps:
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Generate Dockerfile from template
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          ALPINE_VERSION: ${{ matrix.alpine-version }}
        run: |
          ./gen-dockerfile.sh
          echo "Generated Dockerfile:"
          echo "---------------------"
          cat Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        env:
          DOCKER_IMAGE_TAG: ${{matrix.alpine-version}}-python${{matrix.python-version}}-grpcio-${{matrix.grpcio-version}}
        if: ${{ !contains(needs.setup.outputs.published-tags, env.DOCKER_IMAGE_TAG) }}
        with:
          context: .
          push: true
          build-args: grpcio_version=${{ matrix.grpcio-version }}
          tags: jjst/alpine-python-grpcio:${{ env.DOCKER_IMAGE_TAG }}
