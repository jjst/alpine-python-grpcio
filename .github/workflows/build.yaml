name: Build docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 4 * * *'

jobs:
  find-grpcio-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install libxml-xpath-perl jq
      - id: set-matrix
        run: echo "::set-output name=matrix::$(./find-grpcio-versions.sh)"
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-docker-image:
    needs: find-grpcio-versions
    strategy:
      matrix:
        grpcio-version: ${{ fromJson(needs.find-grpcio-versions.outputs.matrix) }}
        python-version: ["3.8", "3.9"]
        alpine-version: ["3.13"]
    runs-on: ubuntu-latest
    steps:
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Generate Dockerfile from template
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          ALPINE_VERSION: ${{ matrix.alpine-version }}
        run: |
          ./gen-dockerfile.sh
          cat Dockerfile
      - id: get-docker-img-id
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          ALPINE_VERSION: ${{ matrix.alpine-version }}
          GRPCIO_VERSION: ${{ matrix.grpcio-version }}
        run: |
          IMG=jjst/alpine-python-grpcio:$ALPINE_VERSION-python$PYTHON_VERSION-grpcio-$GRPCIO_VERSION
          docker images $IMG
          echo "::set-output name=img-hash::$(docker images -q $IMG)"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        if: ${{ steps.get-docker-img-id.outputs.img-hash == '' }}
        with:
          context: .
          push: true
          build-args: grpcio_version=${{ matrix.grpcio-version }}
          tags: jjst/alpine-python-grpcio:${{matrix.alpine-version}}-python${{matrix.python-version}}-grpcio-${{matrix.grpcio-version}}
